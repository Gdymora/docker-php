#!/bin/bash 
# Ім'я мережі
NETWORK_NAME="shared_network"

# Перевірка існування мережі
if ! docker network ls | grep -q "$NETWORK_NAME"; then
  echo "Мережа $NETWORK_NAME не знайдена. Створюємо мережу..."
  docker network create "$NETWORK_NAME"
else
  echo "Мережа $NETWORK_NAME вже існує."
fi
  
if [ -z "$1" ]; then
  echo "Usage: $0 <php_version>"
  exit 1
fi

if [ "$1" == "r" ]; then
  echo "stop"
  exit 0  # Вихід зі скрипта з кодом 0 (успішно). 
fi

if [ "$1" == "h" ]; then
  echo "./start stop - stop nginx and mysql"
  echo "./start 83 - start docker-compose-php83.yml up"
  echo "./start 7 - start docker-compose-php7.yml up"
  echo "./start 83 build - start docker-compose-php83.yml up --build --remove-orphans"
  echo "./start 83 down - docker-compose-php83.yml down"
  exit 0
fi

if [ "$1" == "stop" ]; then
  echo "stop"
  # Останавливаем сервисы
  sudo service mysql stop
  sudo service nginx stop
  exit 1
fi

php_version="$1"

if [ "$2" == "build" ]; then
  docker compose -f "docker-compose-php$php_version.yml" up --build --remove-orphans
  exit 0
fi

if [ "$2" == "down" ]; then
  docker compose -f "docker-compose-php$php_version.yml" down
  exit 0
fi

# Запускаем docker-compose для указанной версии PHP
docker compose -f "docker-compose-php$php_version.yml" up
# example comand
# ./start 7 or ./start 8 or ./start 83
