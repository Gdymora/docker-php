# Версия docker-compose
version: '3.7'
# Список наших сервисов (контейнеров)
services:
    nginx:
 # используем последний стабильный образ nginx
        image: nginx:latest
     
        # Назовем свой контейнер по красивому
        container_name: nginx
        restart: unless-stopped
        # маршрутизируем порты 
        ports:
            - "80:80"
            - "443:443"
        # монтируем директории, слева директории на основной машине, справа - куда они монтируются в контейнере
        volumes:   
            - ./conf/nginx/conf.d/:/etc/nginx/conf.d/ 
            - ./conf/nginx/html:/usr/share/nginx/html
            - ./conf/nginx/ssl:/etc/nginx/ssl
            - ./www:/var/www
            - ./logs:/var/log/nginx

        environment:
            NGINX_HOST: localhost
            NGINX_PORT: 8080

        depends_on:
            - php-8
        networks:
          - app-network 
    
    php-8:
        build: ./images/php8
        container_name: php8
        restart: unless-stopped
        environment:
          MYSQL_HOST: mysql
          MYSQL_DATABASE: myapp
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypassword
        depends_on:
            - mysql
        volumes:
            - ./www:/var/www 
            - ./images/php8/php.ini:/usr/local/etc/php/conf.d/docker-fpm.ini  
        networks:
          - app-network 
        ports:
          - "8000:8000"
          - "8001:8001"
          - "5173:5173" 
          - "5132:5132" 
        working_dir: /var/www
        command: /bin/bash -c "/var/www/accounting/start.sh && /var/www/socialnetwork/cabinet/start.sh"

            # systemctl status php8.2-fpm.service

    phpmyadmin:
        image: phpmyadmin/phpmyadmin        
        container_name: phpmyadmin
        restart: unless-stopped
        ports:
            - 8090:80 
        environment:
          PMA_HOST: mysql
          MYSQL_ROOT_PASSWORD: secret       
        depends_on:
            - mysql
        networks:
          - app-network 

    mysql:

        image: mysql:8
        restart: unless-stopped
        ports:
            - "3306:3306"
        # задаем пароль для root пользователя
        environment:
            # прописываем название нашего MySQL хоста
            PMA_HOST: mysql
            MYSQL_USERNAME: root
            MYSQL_ROOT_PASSWORD: secret
        volumes:
           # - /var/lib/mysql/mysql-data-docker-php:/var/lib/mysql
            - ./mysql-data-docker-php:/var/lib/mysql 
        networks:
          - app-network
    #npm:
       #image: node:latest
       # volumes:
        #   - .:/var/www/html
       # working_dir: /var/www/html/socialnetwork/cabinet
        #command: npm run watch
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
volumes:
  mysql-data:
    driver: local